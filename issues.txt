GAME = html, css, javascript, canvas, genetic programming, /*recursion -> tree structure + backtracking needed*/, binary tree, github, atom

2.not eating the second apple? (fixed) (laziest way possible)
3.apples appearing inside the snake? (fixed)
4.only arrow key-pressing should get through! (fixed)
5.function for placing fruit is imperfect (fixed)

1.killing itself with just fast key pressing (fixed but shitty ->, if long pressed arrows snake lags -> slow to respond)
6.game speed increases if fruit is eaten? (nah fuck dat maybe later)
8. deactivate arrow affecting page scrolling

UI
1. deal with the second window for UI player (done)
2. how will ui play (done i guess)
3. tree class (done)
4. generate random tree with maximum depth <= maxDepth & skip some nodes (GROW METHOD) (done)
5. functions
6. HOW TO GO THROUGH THE THREE WHEN PLAYING!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!?
7. print each runs best
13. could be the default depth of a tree random ? (each tree would have to have a depth variable) (already is y dumbass)


8. how to switch branches??? (considering dealing with references) 
9. how to combine parents into offspring 
10. how many parents to choose (flexible or hardcoded) (based on what) (start with 1/3)
12. choosing parents to fuck ()
11. how many offsprings (flexible or hardcoded) (based on what) (start with initial population size)


IDEADS
1.making new object -> functions ?
2.new function for snake controlling -> nextstepdeath? & look into future concept ?\
3.run a test initiating variables like size of population randomly (could take whole day maybe even couple)
4.running couple of evolutions saving best ten snakes then run one more with just this ten from each evolution\
5.flexible populationSize


WEB APP & DESIGN
1. design the shit out of it
2. multiple devices problem
3. security -> hide the functions that can be hidden & test those that are not 


FINISh
1.research and learn the most wanted skill


